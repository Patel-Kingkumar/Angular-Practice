üîπ 10 Parent ‚Üí Child (@Input) Questions
1Ô∏è‚É£ Basic String Passing

Goal: Pass a simple string from parent to child.
Parent: "Welcome to Angular"
Child Template: Displays the message.
Concept: Basic @Input() property binding.

2Ô∏è‚É£ Number Passing

Goal: Pass a numeric value (e.g., age = 25) from parent to child.
Child: Shows "Your age is 25"
Concept: Passing numbers via @Input().

3Ô∏è‚É£ Boolean Passing

Goal: Pass a boolean flag (isLoggedIn = true) to child.
Child: Displays "Welcome back!" if true, "Please login" if false.
Concept: Conditional rendering based on boolean input.

4Ô∏è‚É£ Object Passing

Goal: Pass an object from parent:

user = { name: 'John', email: 'john@example.com' }


Child: Displays Name: John, Email: john@example.com.
Concept: Passing complex objects with @Input().

5Ô∏è‚É£ Array Passing

Goal: Pass an array of strings from parent:

fruits = ['Apple', 'Banana', 'Mango']


Child: Uses *ngFor to display the list.
Concept: Passing arrays and looping in child component.

6Ô∏è‚É£ Multiple Inputs

Goal: Pass multiple inputs:

title = "Angular Tutorial"; author = "King Patel"


Child Template: "Angular Tutorial by King Patel"
Concept: Handling multiple @Input() properties in one child.

7Ô∏è‚É£ Dynamic Class / Styling

Goal: Pass a color string from parent:

color = 'blue'


Child: Uses [ngStyle] or [style.color] to set text color.
Concept: Dynamic styling with @Input().

8Ô∏è‚É£ Nested Object

Goal: Pass a nested object:

post = { title: 'Angular', author: { name: 'King', email: 'king@gmail.com' } }


Child: Displays "Angular by King"
Concept: Access nested object properties via @Input().

9Ô∏è‚É£ Event-Triggered Data

Goal: Parent passes a string that changes on a button click.

Parent has a button: "Update Message"

Updates message = "Updated by parent"

Child automatically reflects new message.
Concept: Data binding updates child dynamically when parent changes.

üîü Conditional Data Display

Goal: Parent passes an object with a status property:

task = { title: 'Write tests', completed: true }


Child: Shows "Task completed" if true, "Task pending" if false.
Concept: Conditional rendering based on parent input.

--------------------------------------------------

üîπ 10 Child ‚Üí Parent (@Output) Questions
1Ô∏è‚É£ Basic EventEmitter

Child component emits a simple string "Hello Parent!".
Parent listens and displays the message.

üß† Concept: Basic @Output() and event binding.

